<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Content on Documentation for Balerter</title>
    <link>https://balerter.github.io/en/</link>
    <description>Recent content in The Content on Documentation for Balerter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Feb 2020 16:08:54 +0300</lastBuildDate>
    
	<atom:link href="https://balerter.github.io/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clickhouse</title>
      <link>https://balerter.github.io/en/configuration/datasources/clickhouse/</link>
      <pubDate>Tue, 04 Feb 2020 17:10:36 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/datasources/clickhouse/</guid>
      <description>name: ch1 host: domain.com port: 6440 username: username password: password database: database sslCertPath: /path/to/cert.crt timeout: 3s name  Required, Unique
 Datasource name
This name uses for connect to datasource from script. For example:
local ds = require(&#39;datasource.clickhouse.ch1&#39;) host  Required
 Connection host
port  By default: 6440
 Connection port
username  By default: default
 Connection username
password  By default: empty string
 Connection password
database  By default: default</description>
    </item>
    
    <item>
      <title>File</title>
      <link>https://balerter.github.io/en/configuration/storages/core/file/</link>
      <pubDate>Tue, 04 Feb 2020 17:06:21 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/storages/core/file/</guid>
      <description>Storage &amp;lsquo;File&amp;rsquo;
name: primaryFile path: /path/to/file timeout: 1s name  Require, Unique
 Storage name
path  Require
 Path to file
timeout  By default: 1s
 Timeout</description>
    </item>
    
    <item>
      <title>s3</title>
      <link>https://balerter.github.io/en/configuration/storages/upload/s3/</link>
      <pubDate>Tue, 04 Feb 2020 17:06:21 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/storages/upload/s3/</guid>
      <description>Amazon s3 compatible storage
name: dev region: us-east1 key: SOME_KEY secret: SOME_SECRET endpoint: SOME_ENDPOINT bucket: SOME_BUCKET name  Required, Unique
 Storage name
region  Required
 Region
key  Required
 Access key
secret  Required
 Secret key
endpoint  Required
 Endpoint (without URI schema)
bucket  Required
 Bucket name</description>
    </item>
    
    <item>
      <title>Folder</title>
      <link>https://balerter.github.io/en/configuration/scripts/folder/</link>
      <pubDate>Tue, 04 Feb 2020 16:50:16 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/scripts/folder/</guid>
      <description>name: scripts path: /opt/scripts mask: &#39;*.lua&#39; name  Required, Unique
 Script source name
path  Required
 Path to folder
mask  By default: *.lua
 File mask</description>
    </item>
    
    <item>
      <title>Slack</title>
      <link>https://balerter.github.io/en/configuration/channels/slack/</link>
      <pubDate>Tue, 04 Feb 2020 16:50:16 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/channels/slack/</guid>
      <description>slack: - name: slack-notification token: SLACK-APPLICATION-TOKEN channel: notification name  Required, Unique
 Channel name
token  Required
 Slack application token
channel  Обязательное поле
 Slack channel</description>
    </item>
    
    <item>
      <title>Simple example</title>
      <link>https://balerter.github.io/en/examples/00/</link>
      <pubDate>Tue, 04 Feb 2020 16:37:04 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/examples/00/</guid>
      <description>В данной статье мы по шагам проработаем настройку системы и создание скрипта для следующей задачи:
 У нас есть Prometheus, который собирает какие-то метрики. Мы хотим отслеживать метрику go_memstats_heap_objects. Если значение превысит заданный нами порог, создадим алерт.
 Конфигурирование В первую очередь требуется создать файл конфигуации:
scripts: updateInterval: 5s sources: folder: - name: scripts path: /opt/scripts mask: &#39;*.lua&#39; datasources: prometheus: - name: prom1 url: 127.0.0.1:9090 channels: telegram: - name: tg1 token: TELEGRAM-BOT-TOKEN chatId: 100500 В кофиге мы указали</description>
    </item>
    
    <item>
      <title>CPU Load</title>
      <link>https://balerter.github.io/en/examples/01/</link>
      <pubDate>Tue, 04 Feb 2020 16:32:46 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/examples/01/</guid>
      <description>Check CPU load. If it is greater than 70%, change an alert level to Error  Prometheus collected data from a Node Exporter Metrics have a label instance, which identified every server  -- @interval 30s -- @name cpu70 local cpuLimit = 0.7 local prom1 = require(&#39;datasource.prometheus.prom1&#39;) local alert = require(&#39;alert&#39;) local res, err = prom1.range(&#39;rate(sum(node_cpu_seconds_total{mode!=&amp;quot;idle&amp;quot;}) by (instance)) / rate(sum(node_cpu_seconds_total) by (instance))&#39;) if err ~= nil then return end for i, item in pairs(res) do local v = item.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://balerter.github.io/en/basics/install/</link>
      <pubDate>Tue, 04 Feb 2020 16:20:36 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/basics/install/</guid>
      <description>Docker The official image: https://hub.docker.com/r/balerter/balerter
docker run \ -v /path/to/config.yml:/opt/config.yml \ balerter/balerter -config=/opt/config.yml Build from sources Clone the repo and start the balerter (with the configuration file)
 Require Go 1.13 or later
 git clone https://github.com/balerter/balerter.git cd balerter go run ./cmd/balerter -config /path/to/config.yml </description>
    </item>
    
    <item>
      <title>Prometheus</title>
      <link>https://balerter.github.io/en/configuration/datasources/prometheus/</link>
      <pubDate>Tue, 04 Feb 2020 17:10:42 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/datasources/prometheus/</guid>
      <description>name: prom1 url: domain.com timeout: 3s basicAuth: username: username password: password name  Required, Unique
 Datasource name
local ds = require(&#39;datasource.prometheus.prom1&#39;) url  Required
 Request URI. API path /api/v1/... will be added
basicAuth Username and password, if Prometheus require Basic Auth
timeout  By default: 5s string
 timeout</description>
    </item>
    
    <item>
      <title>File</title>
      <link>https://balerter.github.io/en/configuration/scripts/file/</link>
      <pubDate>Tue, 04 Feb 2020 16:50:16 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/scripts/file/</guid>
      <description>name: scripts filename: /opt/scripts/demo.lua name  Required, Unique
 Script source name
filename  Required
 Path to the script</description>
    </item>
    
    <item>
      <title>Telegram</title>
      <link>https://balerter.github.io/en/configuration/channels/telegram/</link>
      <pubDate>Tue, 04 Feb 2020 16:50:16 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/channels/telegram/</guid>
      <description>telegram: - name: tg1 token: TELEGRAM-BOT-TOKEN chatId: 100500 timeout: 5s proxy: address: 10.20.30.40:5060 auth: username: user password: secret name  Required, Unique
 Channel name
token  Required
 Telegram bot API token
chatId  Required
 Chat ID
timeout  By default: 5s
 timeout
proxy  Default: empty, not use
 Socks5 proxy settings
If auth section is defined, it will use for authentication</description>
    </item>
    
    <item>
      <title>A goroutines count (with a chart)</title>
      <link>https://balerter.github.io/en/examples/02/</link>
      <pubDate>Tue, 04 Feb 2020 16:32:46 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/examples/02/</guid>
      <description>Check a goroutines count  Prometheus collect data Remote S3 storage described in configuration  -- @interval 30s -- @name goroutines local prom1 = require(&#39;datasource.prometheus.prom1&#39;) local alert = require(&#39;alert&#39;) local chart = require(&#39;chart&#39;) local storage = require(&#39;storage.s3.dev&#39;) local now = os.time(os.date(&amp;quot;!*t&amp;quot;)) rangeOptions = { [&#39;start&#39;] = now - 86400, [&#39;end&#39;] = now, [&#39;step&#39;] = &#39;3600&#39; } res = prom1.range(&#39;sum(go_goroutines)&#39;, rangeOptions) local chartOptions = { [&#39;series&#39;] = { { [&#39;color&#39;] = &#39;red&#39;, [&#39;line_color&#39;] = &#39;blue&#39;, [&amp;quot;data&amp;quot;] = res[1].</description>
    </item>
    
    <item>
      <title>Create a lua module</title>
      <link>https://balerter.github.io/en/luamodules/new/</link>
      <pubDate>Tue, 04 Feb 2020 16:32:46 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/luamodules/new/</guid>
      <description>A simple example
Method add with two arguments, returns sum
| | modules | math.lua -- math.lua local M = {} local function add(a, b) return a + b end rawset(M, &#39;add&#39;, add) return M An example:
local math = require(&#39;math&#39;) local res = math.add(10, 20) print(res) -- 30 </description>
    </item>
    
    <item>
      <title>Meta-tags</title>
      <link>https://balerter.github.io/en/scripts/meta-tags/</link>
      <pubDate>Tue, 04 Feb 2020 16:32:46 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/scripts/meta-tags/</guid>
      <description>In the script head you can defined some meta-tags
-- @interval 10s -- @ignore local log = require(&#39;log&#39;) ... Every meta-tag has a format: @&amp;lt;TAG_NAME&amp;gt; [&amp;lt;TAG_OPTIONS&amp;gt;]
All meta-tags should be exactly in the head of script
Any not empty not comment string will be interrupted meta-tags parsing
-- You CAN place comments without tags -- @interval 10s (comment in the meta-tag line NOT ALLOWED) -- -- empty comment string ALLOWED -- also ALLOWED empty strings local a = 10 -- @ignore -- this tag will not be parsing, because we write not empty not comment string above Meta-tags @interval &amp;lt;TIME INTERVAL&amp;gt; Run script Interval If not defined, used default value: 60 seconds</description>
    </item>
    
    <item>
      <title>Postgres</title>
      <link>https://balerter.github.io/en/configuration/datasources/postgres/</link>
      <pubDate>Tue, 04 Feb 2020 17:10:48 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/datasources/postgres/</guid>
      <description>name: pg1 host: domain.com port: 5432 username: username password: password database: database sslMode: verify-full sslCertPath: /path/to/cert.crt timeout: 3s name  Required, Unique
 Datasource name
local ds = require(&#39;datasource.postgres.pg1&#39;) host  Required
 Connection host
port  By default: 5432
 Connection port
username  By default: postgres
 Connection username
password  By default: postgres
 Connection password
database  By default: postgres
 Connection database
sslMode  By default disable</description>
    </item>
    
    <item>
      <title>Syslog</title>
      <link>https://balerter.github.io/en/configuration/channels/syslog/</link>
      <pubDate>Tue, 04 Feb 2020 16:50:16 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/channels/syslog/</guid>
      <description>JSON marshalled messaged will be send to syslog server
syslog: - name: default tag: balerter network: tcp address: 127.0.0.1:10515 priority: &#39;EMERG|DAEMON&#39; name  Required, Unique
 Channel name
tag  Default: empty string
 Syslog tag
network  Default: empty string
 Network type
 udp tcp empty string for use local syslog server  address  Default: empty string
 Server address
priority  Default: EMERG
 Message priority</description>
    </item>
    
    <item>
      <title>Preset modules</title>
      <link>https://balerter.github.io/en/luamodules/presets/</link>
      <pubDate>Tue, 04 Feb 2020 16:32:46 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/luamodules/presets/</guid>
      <description>Preset modules By default Balerter distributed with some preset modules, which placed in the modules folder.
They are not needed for the balerter functional
h (helper) Usage:
local h = require(&#39;h&#39;) Methods tableToMap(table, keyFieldName) table, error Convert lua table to hash-table with keys as &amp;lsquo;keyFieldName&amp;rsquo; value
An example:
table = { { date = &#39;2020-01-01&#39;, id = &#39;a&#39;, name = &#39;aa&#39;}, { date = &#39;2020-01-01&#39;, id = &#39;b&#39;, name = &#39;bb&#39; }, .</description>
    </item>
    
    <item>
      <title>CLI flags</title>
      <link>https://balerter.github.io/en/basics/run/</link>
      <pubDate>Tue, 04 Feb 2020 16:20:36 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/basics/run/</guid>
      <description>TODO:</description>
    </item>
    
    <item>
      <title>MySQL</title>
      <link>https://balerter.github.io/en/configuration/datasources/mysql/</link>
      <pubDate>Tue, 04 Feb 2020 17:10:48 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/datasources/mysql/</guid>
      <description>name: mysql1 dsn: user:secret@tcp(127.0.0.1:3306)/database timeout: 3s name  Required, Unique
 Datasource name
local ds = require(&#39;datasource.postgres.mysql1&#39;) dsn  Required
 DSN (Data Source Name) for connect to DB
Format: [username[:password]@][protocol[(address)]]/dbname[?param1=value1&amp;amp;...&amp;amp;paramN=valueN]
 golang packge for more information about DSN
 timeout  By default: 5s string
 timeout</description>
    </item>
    
    <item>
      <title>Notify</title>
      <link>https://balerter.github.io/en/configuration/channels/notify/</link>
      <pubDate>Tue, 04 Feb 2020 16:50:16 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/channels/notify/</guid>
      <description>Send standard OS GUI notification
 Important! This channel does not support &amp;lsquo;fields&amp;rsquo; from alert options
 notify: - name: default icons: success: /path/to/logo-success.png error: /path/to/logo-error.png warning: /path/to/logo-warning.png name  Required, Unique
 Channel name
icons.success/error/warning  By default: empty string
 Path to images (use as notification icons)</description>
    </item>
    
    <item>
      <title>Loki</title>
      <link>https://balerter.github.io/en/configuration/datasources/loki/</link>
      <pubDate>Tue, 04 Feb 2020 17:10:42 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/datasources/loki/</guid>
      <description>name: loki1 url: domain.com timeout: 5s basicAuth: username: username password: password name  Required, Unique
 Datasource name
local ds = require(&#39;datasource.loki.loki1&#39;) url  Required
 Request URI. API path /api/v1/... will be added
timeout  By default: 5s
 timeout
basicAuth Username and password, if Loki require Basic Auth</description>
    </item>
    
    <item>
      <title>Email</title>
      <link>https://balerter.github.io/en/configuration/channels/email/</link>
      <pubDate>Tue, 04 Feb 2020 16:50:16 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/channels/email/</guid>
      <description>Send Email
email: - name: default from: foo@bar.com to: alert@bar.com cc: alert-cc@bar.com host: bar.com port: 1234 username: user password: secret secure: ssl timeout: 1000 name  Required, Unique
 Channel name
from Field &amp;lsquo;from&amp;rsquo;
to Field &amp;lsquo;to&amp;rsquo;
cc Field &amp;lsquo;cc&amp;rsquo;
host Hostname
port Port
If Port equals to &amp;lsquo;465&amp;rsquo; and Secure field is empty, Secure filed will be set to &amp;lsquo;ssl&amp;rsquo;
username Username
password Password
secure none, ssl, tls or empty string</description>
    </item>
    
    <item>
      <title>Discord</title>
      <link>https://balerter.github.io/en/configuration/channels/discord/</link>
      <pubDate>Tue, 04 Feb 2020 16:50:16 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/configuration/channels/discord/</guid>
      <description>Send to Discord
 discord: - name: default token: &#39;ABCD&#39; channelId: 1234 name  Required, Unique
 Channel name
token Token
channelID Channel ID</description>
    </item>
    
  </channel>
</rss>
(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{410:function(t,a,e){"use strict";e.r(a);var s=e(40),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"meta-tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#meta-tags"}},[t._v("#")]),t._v(" meta-tags")]),t._v(" "),e("p",[t._v("In the script head you can define some meta-tags")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @cron 0 * * * * *")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @ignore")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'log'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Every meta-tag has a format: "),e("code",[t._v("@<TAG_NAME> [<TAG_OPTIONS>]")])]),t._v(" "),e("p",[t._v("All meta-tags should be exactly in the head of script")]),t._v(" "),e("p",[t._v("Any not empty not comment string will interrupt meta-tags parsing")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- You CAN place comments without tags")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @cront */10 * * * * * (comment in the meta-tag line NOT ALLOWED)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- empty comment string ALLOWED")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- also ALLOWED empty strings")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @ignore")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- this tag will not be parsing, because we write not empty not comment string above")]),t._v("\n")])])]),e("h3",{attrs:{id:"meta-tags-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#meta-tags-2"}},[t._v("#")]),t._v(" Meta-tags")]),t._v(" "),e("h4",{attrs:{id:"cront-expression"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cront-expression"}},[t._v("#")]),t._v(" "),e("code",[t._v("@cront <EXPRESSION>")])]),t._v(" "),e("p",[t._v("If not defined, used default value: 1 minutes (0 * * * * *)")]),t._v(" "),e("p",[t._v("The cron expression have 6 sections:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Second, Minute, Hour, Day-of-Month, Month, Day-of-week\n")])])]),e("p",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cron",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link to the Wikipedia"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"ignore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignore"}},[t._v("#")]),t._v(" "),e("code",[t._v("@ignore")])]),t._v(" "),e("p",[t._v("If this meta-tag is present, this script will not be run")]),t._v(" "),e("p",[t._v("An example:")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @ignore")]),t._v("\n")])])]),e("h4",{attrs:{id:"name-script-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name-script-name"}},[t._v("#")]),t._v(" "),e("code",[t._v("@name <SCRIPT NAME>")])]),t._v(" "),e("p",[t._v("Script name for logging")]),t._v(" "),e("p",[t._v("By default, use filename")]),t._v(" "),e("p",[t._v("An example:")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @name script1")]),t._v("\n")])])]),e("h4",{attrs:{id:"channels-channel-name-1-channel-name-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#channels-channel-name-1-channel-name-2"}},[t._v("#")]),t._v(" "),e("code",[t._v("@channels <CHANNEL NAME 1>,<CHANNEL NAME 2>,...")])]),t._v(" "),e("p",[t._v("Allows redefining channels for send notifications.")]),t._v(" "),e("p",[t._v("By default, notifications send to all channels, described in the configuration")]),t._v(" "),e("p",[t._v("You can define multiply channel in comma-separated string")]),t._v(" "),e("p",[t._v("An example:")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @channels slack-manager,email-ceo")]),t._v("\n")])])]),e("h4",{attrs:{id:"an-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#an-example"}},[t._v("#")]),t._v(" An example")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- multi meta example")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @name MyScript")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @channels slack-ceo,telegram-ceo")]),t._v("\n")])])]),e("h4",{attrs:{id:"test-main-script-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test-main-script-name"}},[t._v("#")]),t._v(" "),e("code",[t._v("@test <MAIN_SCRIPT_NAME>")])]),t._v(" "),e("p",[t._v("Mark this script as 'Test' for the script with name "),e("code",[t._v("<MAIN_SCRIPT_NAME>")])]),t._v(" "),e("p",[t._v("This script will be running only with "),e("code",[t._v("balerter/test")]),t._v(" tool. With "),e("code",[t._v("balerter")]),t._v(" this script will be ignored")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @name demo-test")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @test demo")]),t._v("\n\ntest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h4",{attrs:{id:"timeout-time-duration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#timeout-time-duration"}},[t._v("#")]),t._v(" "),e("code",[t._v("@timeout <TIME DURATION>")])]),t._v(" "),e("p",[t._v("Set timeout for the script.")]),t._v(" "),e("p",[t._v("By default, 1 hour")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @timeout 30s")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);